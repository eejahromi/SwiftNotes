// New Codable Protocol in Swift 4

NOTE: Codable is a typealias for Decodable & Encodable, if only reading or writing then we can use one of them

- Using Codable with Property lists

// model struct that matches property list elements
strcut MySettings: Codable {
  var someFlag: Bool
  var someString: String
  var someInt: Int
  
  // if we don't want to use the same keyNames in our struct, we use CodingKeys enum
  private enum CodingKeys: String, CodingKey {
    case someFlag
    case someString
    case id = "someInt"
  }
}

// read/decode example
let settingsUrl: URL = ...
var mySettings: MySettings?

if let data = try? Data(contentsOf: settingsURL) {
  let decoder = PropertyListDecoder()
  settings = try? decoder.decode(MySettings.self, from: data)
}

