-deciding between methods vs computed properties
// if we need a setter, it's better to use a computed property
// if no setter or we need to hit a DB or do heavy computation then it's better to do methods

-enum with method example
enum Month:Int{
  case January = 1,Febuary, March, ...
  
  func monthsUntilDecember() -> Int {
    return Month.December.rawValue - this.rawValue // using this for incoming month
  }
}

-mutating methods
Since structs are value typed as apposed to classes, mutating methods are used to change a struct's value

-private setter
class Car{
  private(set) var color: String // color cannot be altered from outside the class
  
  func paint(color: String){
    self.color = color
  }
}

-Type methods (static methods)
structs Utils {
  static func factorial(number: Int) -> Int { // alows for class level call
    return (1...number).reduce(1,combine: *)
  }
}
