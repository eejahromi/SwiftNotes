// structs vs classes

    structues
    implicit copying of values
    data is immutable
    useful for representing values
    declared on stack

    Classes
    implicit sharing of objects
    data is mutable
    useful for representing "things"
    declared on heap

// simple class Person
class Person{
    var firstName: String
    var lastName: String
 
    init(firstName: String,lastName:String){
        self.firstName = firstName
        self.lastName = lastName
    }
    
    func fullName() ->String {
        return "\(firstName) \(lastName)"
    }
}

// all stored variables must have initial values unless they are optionals
let john = Person(firstName: "John", lastName: "Smith")
john.fullName()

// checking identity of the object
let secondJohn = john
secondJohn === john // true

let someOtherJohn = Person(firstName: "John", lastName: "Smith")
someOtherJohn === john // false
